define("gtd/adapters/application",["ember-data","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.LSAdapter.extend({namespace:"gtd-tasks"})}),define("gtd/app",["ember","ember/resolver","ember/load-initializers","exports"],function(e,t,s,n){"use strict";var a=e["default"],r=t["default"],i=s["default"];a.MODEL_FACTORY_INJECTIONS=!0;var o=a.Application.extend({modulePrefix:"gtd",Resolver:r});i(o,"gtd"),n["default"]=o}),define("gtd/components/task-edit",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Component.extend({tagName:"span",attributeBindings:["action","value","isEditing"],didInsertElement:function(){this.$("input").focus()},actions:{submit:function(){this.sendAction()},cancel:function(){this.set("isEditing",!1)}}})}),define("gtd/controllers/index",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.ArrayController.extend({itemController:"task",errors:{},lastArchived:[],filteredContent:function(){return this.get("content").filter(function(e){return!e.get("archived")})}.property("content.@each.archived"),actions:{addTask:function(){var e=this.store.createRecord("task",{description:this.get("newDescription")});this.setProperties({newDescription:"",errors:{}}),s.empty(e.get("description"))?(e.rollback(),this.set("errors",{task:"Your new task must have a description."})):e.save()},archiveDone:function(){var e=[];this.get("filteredContent").forEach(function(t){t.get("done")&&(t.set("archived",!0),e.push(t),t.save())}),this.set("lastArchived",e)},undoArchive:function(){var e=this.get("lastArchived");e.length&&e.forEach(function(e){e.set("archived",!1),e.save()}),this.set("lastArchived",[])}}})}),define("gtd/controllers/task",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.ObjectController.extend({isEditing:!1,doneChanged:function(){this.get("content").save()}.observes("done"),actions:{updateTask:function(){this.get("content").save(),this.set("isEditing",!1)},toggleEdit:function(){this.toggleProperty("isEditing")},removeTask:function(e){return e.set("archived",!0),e.save(),!0}}})}),define("gtd/models/task",["ember-data","exports"],function(e,t){"use strict";var s=e["default"],n=s.Model.extend({archived:s.attr("boolean",{defaultValue:!1}),description:s.attr("string"),done:s.attr("boolean",{defaultValue:!1})});n.reopenClass({FIXTURES:[{id:1,done:!1,description:"take out the trash"},{id:2,done:!0,description:"do programming exercise"},{id:3,done:!0,description:"make the bed"},{id:4,done:!0,description:"go on a hike"},{id:5,done:!1,description:"make lunch"},{id:6,done:!0,description:"call car insurance"},{id:7,done:!1,description:"learn a new spanish word"},{id:8,done:!0,description:"go climbing"}]}),t["default"]=n}),define("gtd/router",["ember","exports"],function(e,t){"use strict";var s=e["default"],n=s.Router.extend({location:GtdENV.locationType});n.map(function(){}),t["default"]=n}),define("gtd/routes/index",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Route.extend({model:function(){return this.store.find("task")}})}),define("gtd/serializers/application",["ember-data","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.LSSerializer.extend()}),define("gtd/templates/application",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,a,r){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),r=r||{};var i,o="";return r.buffer.push('<h1>Tasks</h1>\n\n<div class="container">\n  '),i=n._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n</div>\n"),o})}),define("gtd/templates/components/task-edit",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,a,r){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),r=r||{};var i,o,u="",h=n.helperMissing,c=this.escapeExpression;return r.buffer.push(c((i=n.input||t&&t.input,o={hash:{type:"text",value:"value",action:"submit"},hashTypes:{type:"STRING",value:"ID",action:"STRING"},hashContexts:{type:t,value:t,action:t},contexts:[],types:[],data:r},i?i.call(t,o):h.call(t,"input",o)))),r.buffer.push("\n<button "),r.buffer.push(c(n.action.call(t,"submit",{hash:{on:"click"},hashTypes:{on:"STRING"},hashContexts:{on:t},contexts:[t],types:["STRING"],data:r}))),r.buffer.push(">save</button>\n"),u})}),define("gtd/templates/index",["ember","exports"],function(e,t){"use strict";var s=e["default"];t["default"]=s.Handlebars.template(function(e,t,n,a,r){function i(e,t){var s,a="";return t.buffer.push("\n    <small>"),s=n._triageMustache.call(e,"errors.task",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push("</small>\n    "),a}function o(e,t){var s,a="";return t.buffer.push('\n<div class="notice">\n  <span class="btn" '),t.buffer.push(b(n.action.call(e,"undoArchive",{hash:{on:"click"},hashTypes:{on:"STRING"},hashContexts:{on:e},contexts:[e],types:["STRING"],data:t}))),t.buffer.push(">\n    restore the last "),s=n._triageMustache.call(e,"lastArchived.length",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push(" task(s)\n  </span>\n</div>\n"),a}function u(e,t){var s,a,r,i="";return t.buffer.push("\n  <li "),t.buffer.push(b(n["bind-attr"].call(e,{hash:{"class":":task done"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push(">\n    "),t.buffer.push(b((a=n.input||e&&e.input,r={hash:{type:"checkbox","class":"task-done",checked:"done"},hashTypes:{type:"STRING","class":"STRING",checked:"ID"},hashContexts:{type:e,"class":e,checked:e},contexts:[],types:[],data:t},a?a.call(e,r):v.call(e,"input",r)))),t.buffer.push("\n    "),s=n["if"].call(e,"isEditing",{hash:{},hashTypes:{},hashContexts:{},inverse:x.program(8,c,t),fn:x.program(6,h,t),contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push("\n  </li>\n  "),i}function h(e,t){var s,a,r="";return t.buffer.push('\n      <div class="task-description">\n        '),t.buffer.push(b((s=n["task-edit"]||e&&e["task-edit"],a={hash:{value:"description",action:"updateTask"},hashTypes:{value:"ID",action:"STRING"},hashContexts:{value:e,action:e},contexts:[],types:[],data:t},s?s.call(e,a):v.call(e,"task-edit",a)))),t.buffer.push("\n      </div>\n    "),r}function c(e,t){var s,a="";return t.buffer.push('\n      <div class="task-description" '),t.buffer.push(b(n.action.call(e,"toggleEdit",{hash:{on:"doubleClick"},hashTypes:{on:"STRING"},hashContexts:{on:e},contexts:[e],types:["STRING"],data:t}))),t.buffer.push(">\n        "),s=n._triageMustache.call(e,"description",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(s||0===s)&&t.buffer.push(s),t.buffer.push("\n      </div>\n    "),a}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,s.Handlebars.helpers),r=r||{};var d,l,p,f="",b=this.escapeExpression,v=n.helperMissing,x=this;return r.buffer.push('<h2>Today\'s Tasks</h2>\n\n<div class="tasks-actions">\n  <form class="new-task" '),r.buffer.push(b(n.action.call(t,"addTask",{hash:{on:"submit"},hashTypes:{on:"STRING"},hashContexts:{on:t},contexts:[t],types:["STRING"],data:r}))),r.buffer.push(">\n    "),d=n["if"].call(t,"errors.task",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(1,i,r),contexts:[t],types:["ID"],data:r}),(d||0===d)&&r.buffer.push(d),r.buffer.push("\n    "),r.buffer.push(b((l=n.input||t&&t.input,p={hash:{value:"newDescription",placeholder:"enter a new task"},hashTypes:{value:"ID",placeholder:"STRING"},hashContexts:{value:t,placeholder:t},contexts:[],types:[],data:r},l?l.call(t,p):v.call(t,"input",p)))),r.buffer.push('\n    <button class="btn" type="submit">save</button>\n  </form>\n</div>\n\n<p>Double click a task to edit the description.</p>\n\n'),d=n["if"].call(t,"lastArchived",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(3,o,r),contexts:[t],types:["ID"],data:r}),(d||0===d)&&r.buffer.push(d),r.buffer.push('\n\n<ul class="tasks">\n  '),d=n.each.call(t,"filteredContent",{hash:{itemController:"task"},hashTypes:{itemController:"STRING"},hashContexts:{itemController:t},inverse:x.noop,fn:x.program(5,u,r),contexts:[t],types:["ID"],data:r}),(d||0===d)&&r.buffer.push(d),r.buffer.push('\n</ul>\n\n<button class="btn archive-done" '),r.buffer.push(b(n.action.call(t,"archiveDone",{hash:{on:"click"},hashTypes:{on:"STRING"},hashContexts:{on:t},contexts:[t],types:["STRING"],data:r}))),r.buffer.push(">archive done tasks</button>\n"),f})});